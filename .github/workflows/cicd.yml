name: CI/CD Pipeline

on:
  push:
    branches:
      - unstable

jobs:
  test-and-build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Initialize Frontend
        run: npm ci
        working-directory: frontend

      - name: Format/Lint Frontend
        run: |
          npm run format
          npm run lint
        working-directory: frontend

      #- name: Setup Java environment
      #  uses: actions/setup-java@v3
      #  with:
      #    java-version: "17"
      #    distribution: "temurin"

      #- name: Start Backend
      #  run: |
      #    cd backend
      #    chmod +x mvnw
      #    ./mvnw compile quarkus:dev > quarkus_dev.log 2>&1 & disown

      #- name: Test Frontend
      #  run: npm run test
      #  working-directory: frontend

      - name: Build Frontend
        run: npm run build
        working-directory: frontend

      - name: Archive Frontend
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: frontend/dist

  test-and-build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java environment
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build Backend
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw package -Dnative -Dquarkus.native.container-build=true

      - name: Archive Backend
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: backend/target

  push-frontend-to-docker-hub:
    needs: test-and-build-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: frontend
          path: ./frontend/dist

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: cre8ivemind/creative-mind-frontend:latest
          platforms: linux/amd64,linux/arm64
          context: ./frontend

  push-backend-to-docker-hub:
    needs: test-and-build-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: backend
          path: ./backend/target

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: cre8ivemind/creative-mind-backend:latest
          platforms: linux/amd64,linux/arm64
          context: ./backend

  deploy-frontend-to-oci:
    needs: push-frontend-to-docker-hub
    runs-on: ubuntu-latest

    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Get or create OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: creative-mind-frontend
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Tag and push the container image
        id: tag-and-push-image
        run: |
          docker pull cre8ivemind/creative-mind-frontend:latest
          docker tag "cre8ivemind/creative-mind-frontend:latest" "${{ steps.get-ocir-repository.outputs.repo_path }}:latest"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:latest"

  deploy-backend-to-oci:
    needs: push-backend-to-docker-hub
    runs-on: ubuntu-latest

    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Get or create OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: creative-mind-backend
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Tag and push the container image
        id: tag-and-push-image
        run: |
          docker pull cre8ivemind/creative-mind-backend:latest
          docker tag "cre8ivemind/creative-mind-backend:latest" "${{ steps.get-ocir-repository.outputs.repo_path }}:latest"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:latest"
